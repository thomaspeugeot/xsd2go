// Code generated by https://github.com/gocomply/xsd2go; DO NOT EDIT.
// Models for http://www.omg.org/spec/ReqIF/20110401/reqif.xsd
package REQIF

import (
	"encoding/xml"
)

// Element
type ReqIf struct {
	XMLName xml.Name `xml:"REQ-IF"`

	Lang string `xml:"lang,attr,omitempty"`

	TheHeader TheHeader `xml:"THE-HEADER"`

	CoreContent CoreContent `xml:"CORE-CONTENT"`

	ToolExtensions *ToolExtensions `xml:"TOOL-EXTENSIONS"`
}

// Element
type AlternativeId struct {
	XMLName xml.Name `xml:"ALTERNATIVE-ID"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`
}

// Element
type DefaultValue struct {
	XMLName xml.Name `xml:"DEFAULT-VALUE"`

	AttributeValueBoolean *AttributeValueBoolean `xml:"ATTRIBUTE-VALUE-BOOLEAN"`
}

// Element
type Type struct {
	XMLName xml.Name `xml:"TYPE"`

	DatatypeDefinitionBooleanRef *LocalRef `xml:"DATATYPE-DEFINITION-BOOLEAN-REF"`
}

// Element
type AlternativeId struct {
	XMLName xml.Name `xml:"ALTERNATIVE-ID"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`
}

// Element
type DefaultValue struct {
	XMLName xml.Name `xml:"DEFAULT-VALUE"`

	AttributeValueDate *AttributeValueDate `xml:"ATTRIBUTE-VALUE-DATE"`
}

// Element
type Type struct {
	XMLName xml.Name `xml:"TYPE"`

	DatatypeDefinitionDateRef *LocalRef `xml:"DATATYPE-DEFINITION-DATE-REF"`
}

// Element
type DefaultValue struct {
	XMLName xml.Name `xml:"DEFAULT-VALUE"`

	AttributeValueEnumeration *AttributeValueEnumeration `xml:"ATTRIBUTE-VALUE-ENUMERATION"`
}

// Element
type AlternativeId struct {
	XMLName xml.Name `xml:"ALTERNATIVE-ID"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`
}

// Element
type Type struct {
	XMLName xml.Name `xml:"TYPE"`

	DatatypeDefinitionEnumerationRef *LocalRef `xml:"DATATYPE-DEFINITION-ENUMERATION-REF"`
}

// Element
type AlternativeId struct {
	XMLName xml.Name `xml:"ALTERNATIVE-ID"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`
}

// Element
type DefaultValue struct {
	XMLName xml.Name `xml:"DEFAULT-VALUE"`

	AttributeValueInteger *AttributeValueInteger `xml:"ATTRIBUTE-VALUE-INTEGER"`
}

// Element
type Type struct {
	XMLName xml.Name `xml:"TYPE"`

	DatatypeDefinitionIntegerRef *LocalRef `xml:"DATATYPE-DEFINITION-INTEGER-REF"`
}

// Element
type AlternativeId struct {
	XMLName xml.Name `xml:"ALTERNATIVE-ID"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`
}

// Element
type DefaultValue struct {
	XMLName xml.Name `xml:"DEFAULT-VALUE"`

	AttributeValueReal *AttributeValueReal `xml:"ATTRIBUTE-VALUE-REAL"`
}

// Element
type Type struct {
	XMLName xml.Name `xml:"TYPE"`

	DatatypeDefinitionRealRef *LocalRef `xml:"DATATYPE-DEFINITION-REAL-REF"`
}

// Element
type AlternativeId struct {
	XMLName xml.Name `xml:"ALTERNATIVE-ID"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`
}

// Element
type DefaultValue struct {
	XMLName xml.Name `xml:"DEFAULT-VALUE"`

	AttributeValueString *AttributeValueString `xml:"ATTRIBUTE-VALUE-STRING"`
}

// Element
type Type struct {
	XMLName xml.Name `xml:"TYPE"`

	DatatypeDefinitionStringRef *LocalRef `xml:"DATATYPE-DEFINITION-STRING-REF"`
}

// Element
type AlternativeId struct {
	XMLName xml.Name `xml:"ALTERNATIVE-ID"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`
}

// Element
type DefaultValue struct {
	XMLName xml.Name `xml:"DEFAULT-VALUE"`

	AttributeValueXhtml *AttributeValueXhtml `xml:"ATTRIBUTE-VALUE-XHTML"`
}

// Element
type Type struct {
	XMLName xml.Name `xml:"TYPE"`

	DatatypeDefinitionXhtmlRef *LocalRef `xml:"DATATYPE-DEFINITION-XHTML-REF"`
}

// Element
type Definition struct {
	XMLName xml.Name `xml:"DEFINITION"`

	AttributeDefinitionBooleanRef *LocalRef `xml:"ATTRIBUTE-DEFINITION-BOOLEAN-REF"`
}

// Element
type Definition struct {
	XMLName xml.Name `xml:"DEFINITION"`

	AttributeDefinitionDateRef *LocalRef `xml:"ATTRIBUTE-DEFINITION-DATE-REF"`
}

// Element
type Definition struct {
	XMLName xml.Name `xml:"DEFINITION"`

	AttributeDefinitionEnumerationRef *LocalRef `xml:"ATTRIBUTE-DEFINITION-ENUMERATION-REF"`
}

// Element
type Values struct {
	XMLName xml.Name `xml:"VALUES"`

	EnumValueRef []LocalRef `xml:"ENUM-VALUE-REF"`
}

// Element
type Definition struct {
	XMLName xml.Name `xml:"DEFINITION"`

	AttributeDefinitionIntegerRef *LocalRef `xml:"ATTRIBUTE-DEFINITION-INTEGER-REF"`
}

// Element
type Definition struct {
	XMLName xml.Name `xml:"DEFINITION"`

	AttributeDefinitionRealRef *LocalRef `xml:"ATTRIBUTE-DEFINITION-REAL-REF"`
}

// Element
type Definition struct {
	XMLName xml.Name `xml:"DEFINITION"`

	AttributeDefinitionStringRef *LocalRef `xml:"ATTRIBUTE-DEFINITION-STRING-REF"`
}

// Element
type Definition struct {
	XMLName xml.Name `xml:"DEFINITION"`

	AttributeDefinitionXhtmlRef *LocalRef `xml:"ATTRIBUTE-DEFINITION-XHTML-REF"`
}

// Element
type AlternativeId struct {
	XMLName xml.Name `xml:"ALTERNATIVE-ID"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`
}

// Element
type AlternativeId struct {
	XMLName xml.Name `xml:"ALTERNATIVE-ID"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`
}

// Element
type AlternativeId struct {
	XMLName xml.Name `xml:"ALTERNATIVE-ID"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`
}

// Element
type SpecifiedValues struct {
	XMLName xml.Name `xml:"SPECIFIED-VALUES"`

	EnumValue []EnumValue `xml:"ENUM-VALUE"`
}

// Element
type AlternativeId struct {
	XMLName xml.Name `xml:"ALTERNATIVE-ID"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`
}

// Element
type AlternativeId struct {
	XMLName xml.Name `xml:"ALTERNATIVE-ID"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`
}

// Element
type AlternativeId struct {
	XMLName xml.Name `xml:"ALTERNATIVE-ID"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`
}

// Element
type AlternativeId struct {
	XMLName xml.Name `xml:"ALTERNATIVE-ID"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`
}

// Element
type AlternativeId struct {
	XMLName xml.Name `xml:"ALTERNATIVE-ID"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`
}

// Element
type Properties struct {
	XMLName xml.Name `xml:"PROPERTIES"`

	EmbeddedValue *EmbeddedValue `xml:"EMBEDDED-VALUE"`
}

// Element
type AlternativeId struct {
	XMLName xml.Name `xml:"ALTERNATIVE-ID"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`
}

// Element
type SourceSpecification struct {
	XMLName xml.Name `xml:"SOURCE-SPECIFICATION"`

	SpecificationRef *GlobalRef `xml:"SPECIFICATION-REF"`
}

// Element
type SpecRelations struct {
	XMLName xml.Name `xml:"SPEC-RELATIONS"`

	SpecRelationRef []LocalRef `xml:"SPEC-RELATION-REF"`
}

// Element
type TargetSpecification struct {
	XMLName xml.Name `xml:"TARGET-SPECIFICATION"`

	SpecificationRef *GlobalRef `xml:"SPECIFICATION-REF"`
}

// Element
type Type struct {
	XMLName xml.Name `xml:"TYPE"`

	RelationGroupTypeRef *LocalRef `xml:"RELATION-GROUP-TYPE-REF"`
}

// Element
type AlternativeId struct {
	XMLName xml.Name `xml:"ALTERNATIVE-ID"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`
}

// Element
type SpecAttributes struct {
	XMLName xml.Name `xml:"SPEC-ATTRIBUTES"`

	AttributeDefinitionBoolean []AttributeDefinitionBoolean `xml:"ATTRIBUTE-DEFINITION-BOOLEAN"`

	AttributeDefinitionDate []AttributeDefinitionDate `xml:"ATTRIBUTE-DEFINITION-DATE"`

	AttributeDefinitionEnumeration []AttributeDefinitionEnumeration `xml:"ATTRIBUTE-DEFINITION-ENUMERATION"`

	AttributeDefinitionInteger []AttributeDefinitionInteger `xml:"ATTRIBUTE-DEFINITION-INTEGER"`

	AttributeDefinitionReal []AttributeDefinitionReal `xml:"ATTRIBUTE-DEFINITION-REAL"`

	AttributeDefinitionString []AttributeDefinitionString `xml:"ATTRIBUTE-DEFINITION-STRING"`

	AttributeDefinitionXhtml []AttributeDefinitionXhtml `xml:"ATTRIBUTE-DEFINITION-XHTML"`
}

// Element
type TheHeader struct {
	XMLName xml.Name `xml:"THE-HEADER"`

	ReqIfHeader *ReqIfHeader `xml:"REQ-IF-HEADER"`
}

// Element
type CoreContent struct {
	XMLName xml.Name `xml:"CORE-CONTENT"`

	ReqIfContent *ReqIfContent `xml:"REQ-IF-CONTENT"`
}

// Element
type ToolExtensions struct {
	XMLName xml.Name `xml:"TOOL-EXTENSIONS"`

	ReqIfToolExtension []ReqIfToolExtension `xml:"REQ-IF-TOOL-EXTENSION"`
}

// Element
type Datatypes struct {
	XMLName xml.Name `xml:"DATATYPES"`

	DatatypeDefinitionBoolean []DatatypeDefinitionBoolean `xml:"DATATYPE-DEFINITION-BOOLEAN"`

	DatatypeDefinitionDate []DatatypeDefinitionDate `xml:"DATATYPE-DEFINITION-DATE"`

	DatatypeDefinitionEnumeration []DatatypeDefinitionEnumeration `xml:"DATATYPE-DEFINITION-ENUMERATION"`

	DatatypeDefinitionInteger []DatatypeDefinitionInteger `xml:"DATATYPE-DEFINITION-INTEGER"`

	DatatypeDefinitionReal []DatatypeDefinitionReal `xml:"DATATYPE-DEFINITION-REAL"`

	DatatypeDefinitionString []DatatypeDefinitionString `xml:"DATATYPE-DEFINITION-STRING"`

	DatatypeDefinitionXhtml []DatatypeDefinitionXhtml `xml:"DATATYPE-DEFINITION-XHTML"`
}

// Element
type SpecTypes struct {
	XMLName xml.Name `xml:"SPEC-TYPES"`

	RelationGroupType []RelationGroupType `xml:"RELATION-GROUP-TYPE"`

	SpecObjectType []SpecObjectType `xml:"SPEC-OBJECT-TYPE"`

	SpecRelationType []SpecRelationType `xml:"SPEC-RELATION-TYPE"`

	SpecificationType []SpecificationType `xml:"SPECIFICATION-TYPE"`
}

// Element
type SpecObjects struct {
	XMLName xml.Name `xml:"SPEC-OBJECTS"`

	SpecObject []SpecObject `xml:"SPEC-OBJECT"`
}

// Element
type SpecRelations struct {
	XMLName xml.Name `xml:"SPEC-RELATIONS"`

	SpecRelation []SpecRelation `xml:"SPEC-RELATION"`
}

// Element
type Specifications struct {
	XMLName xml.Name `xml:"SPECIFICATIONS"`

	Specification []Specification `xml:"SPECIFICATION"`
}

// Element
type SpecRelationGroups struct {
	XMLName xml.Name `xml:"SPEC-RELATION-GROUPS"`

	RelationGroup []RelationGroup `xml:"RELATION-GROUP"`
}

// Element
type AlternativeId struct {
	XMLName xml.Name `xml:"ALTERNATIVE-ID"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`
}

// Element
type Children struct {
	XMLName xml.Name `xml:"CHILDREN"`

	SpecHierarchy []SpecHierarchy `xml:"SPEC-HIERARCHY"`
}

// Element
type EditableAtts struct {
	XMLName xml.Name `xml:"EDITABLE-ATTS"`

	AttributeDefinitionBooleanRef []LocalRef `xml:"ATTRIBUTE-DEFINITION-BOOLEAN-REF"`

	AttributeDefinitionDateRef []LocalRef `xml:"ATTRIBUTE-DEFINITION-DATE-REF"`

	AttributeDefinitionEnumerationRef []LocalRef `xml:"ATTRIBUTE-DEFINITION-ENUMERATION-REF"`

	AttributeDefinitionIntegerRef []LocalRef `xml:"ATTRIBUTE-DEFINITION-INTEGER-REF"`

	AttributeDefinitionRealRef []LocalRef `xml:"ATTRIBUTE-DEFINITION-REAL-REF"`

	AttributeDefinitionStringRef []LocalRef `xml:"ATTRIBUTE-DEFINITION-STRING-REF"`

	AttributeDefinitionXhtmlRef []LocalRef `xml:"ATTRIBUTE-DEFINITION-XHTML-REF"`
}

// Element
type Object struct {
	XMLName xml.Name `xml:"OBJECT"`

	SpecObjectRef *LocalRef `xml:"SPEC-OBJECT-REF"`
}

// Element
type AlternativeId struct {
	XMLName xml.Name `xml:"ALTERNATIVE-ID"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`
}

// Element
type Values struct {
	XMLName xml.Name `xml:"VALUES"`

	AttributeValueBoolean []AttributeValueBoolean `xml:"ATTRIBUTE-VALUE-BOOLEAN"`

	AttributeValueDate []AttributeValueDate `xml:"ATTRIBUTE-VALUE-DATE"`

	AttributeValueEnumeration []AttributeValueEnumeration `xml:"ATTRIBUTE-VALUE-ENUMERATION"`

	AttributeValueInteger []AttributeValueInteger `xml:"ATTRIBUTE-VALUE-INTEGER"`

	AttributeValueReal []AttributeValueReal `xml:"ATTRIBUTE-VALUE-REAL"`

	AttributeValueString []AttributeValueString `xml:"ATTRIBUTE-VALUE-STRING"`

	AttributeValueXhtml []AttributeValueXhtml `xml:"ATTRIBUTE-VALUE-XHTML"`
}

// Element
type Type struct {
	XMLName xml.Name `xml:"TYPE"`

	SpecObjectTypeRef *LocalRef `xml:"SPEC-OBJECT-TYPE-REF"`
}

// Element
type AlternativeId struct {
	XMLName xml.Name `xml:"ALTERNATIVE-ID"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`
}

// Element
type SpecAttributes struct {
	XMLName xml.Name `xml:"SPEC-ATTRIBUTES"`

	AttributeDefinitionBoolean []AttributeDefinitionBoolean `xml:"ATTRIBUTE-DEFINITION-BOOLEAN"`

	AttributeDefinitionDate []AttributeDefinitionDate `xml:"ATTRIBUTE-DEFINITION-DATE"`

	AttributeDefinitionEnumeration []AttributeDefinitionEnumeration `xml:"ATTRIBUTE-DEFINITION-ENUMERATION"`

	AttributeDefinitionInteger []AttributeDefinitionInteger `xml:"ATTRIBUTE-DEFINITION-INTEGER"`

	AttributeDefinitionReal []AttributeDefinitionReal `xml:"ATTRIBUTE-DEFINITION-REAL"`

	AttributeDefinitionString []AttributeDefinitionString `xml:"ATTRIBUTE-DEFINITION-STRING"`

	AttributeDefinitionXhtml []AttributeDefinitionXhtml `xml:"ATTRIBUTE-DEFINITION-XHTML"`
}

// Element
type AlternativeId struct {
	XMLName xml.Name `xml:"ALTERNATIVE-ID"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`
}

// Element
type Values struct {
	XMLName xml.Name `xml:"VALUES"`

	AttributeValueBoolean []AttributeValueBoolean `xml:"ATTRIBUTE-VALUE-BOOLEAN"`

	AttributeValueDate []AttributeValueDate `xml:"ATTRIBUTE-VALUE-DATE"`

	AttributeValueEnumeration []AttributeValueEnumeration `xml:"ATTRIBUTE-VALUE-ENUMERATION"`

	AttributeValueInteger []AttributeValueInteger `xml:"ATTRIBUTE-VALUE-INTEGER"`

	AttributeValueReal []AttributeValueReal `xml:"ATTRIBUTE-VALUE-REAL"`

	AttributeValueString []AttributeValueString `xml:"ATTRIBUTE-VALUE-STRING"`

	AttributeValueXhtml []AttributeValueXhtml `xml:"ATTRIBUTE-VALUE-XHTML"`
}

// Element
type Source struct {
	XMLName xml.Name `xml:"SOURCE"`

	SpecObjectRef *GlobalRef `xml:"SPEC-OBJECT-REF"`
}

// Element
type Target struct {
	XMLName xml.Name `xml:"TARGET"`

	SpecObjectRef *GlobalRef `xml:"SPEC-OBJECT-REF"`
}

// Element
type Type struct {
	XMLName xml.Name `xml:"TYPE"`

	SpecRelationTypeRef *LocalRef `xml:"SPEC-RELATION-TYPE-REF"`
}

// Element
type AlternativeId struct {
	XMLName xml.Name `xml:"ALTERNATIVE-ID"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`
}

// Element
type SpecAttributes struct {
	XMLName xml.Name `xml:"SPEC-ATTRIBUTES"`

	AttributeDefinitionBoolean []AttributeDefinitionBoolean `xml:"ATTRIBUTE-DEFINITION-BOOLEAN"`

	AttributeDefinitionDate []AttributeDefinitionDate `xml:"ATTRIBUTE-DEFINITION-DATE"`

	AttributeDefinitionEnumeration []AttributeDefinitionEnumeration `xml:"ATTRIBUTE-DEFINITION-ENUMERATION"`

	AttributeDefinitionInteger []AttributeDefinitionInteger `xml:"ATTRIBUTE-DEFINITION-INTEGER"`

	AttributeDefinitionReal []AttributeDefinitionReal `xml:"ATTRIBUTE-DEFINITION-REAL"`

	AttributeDefinitionString []AttributeDefinitionString `xml:"ATTRIBUTE-DEFINITION-STRING"`

	AttributeDefinitionXhtml []AttributeDefinitionXhtml `xml:"ATTRIBUTE-DEFINITION-XHTML"`
}

// Element
type AlternativeId struct {
	XMLName xml.Name `xml:"ALTERNATIVE-ID"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`
}

// Element
type Values struct {
	XMLName xml.Name `xml:"VALUES"`

	AttributeValueBoolean []AttributeValueBoolean `xml:"ATTRIBUTE-VALUE-BOOLEAN"`

	AttributeValueDate []AttributeValueDate `xml:"ATTRIBUTE-VALUE-DATE"`

	AttributeValueEnumeration []AttributeValueEnumeration `xml:"ATTRIBUTE-VALUE-ENUMERATION"`

	AttributeValueInteger []AttributeValueInteger `xml:"ATTRIBUTE-VALUE-INTEGER"`

	AttributeValueReal []AttributeValueReal `xml:"ATTRIBUTE-VALUE-REAL"`

	AttributeValueString []AttributeValueString `xml:"ATTRIBUTE-VALUE-STRING"`

	AttributeValueXhtml []AttributeValueXhtml `xml:"ATTRIBUTE-VALUE-XHTML"`
}

// Element
type Children struct {
	XMLName xml.Name `xml:"CHILDREN"`

	SpecHierarchy []SpecHierarchy `xml:"SPEC-HIERARCHY"`
}

// Element
type Type struct {
	XMLName xml.Name `xml:"TYPE"`

	SpecificationTypeRef *LocalRef `xml:"SPECIFICATION-TYPE-REF"`
}

// Element
type AlternativeId struct {
	XMLName xml.Name `xml:"ALTERNATIVE-ID"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`
}

// Element
type SpecAttributes struct {
	XMLName xml.Name `xml:"SPEC-ATTRIBUTES"`

	AttributeDefinitionBoolean []AttributeDefinitionBoolean `xml:"ATTRIBUTE-DEFINITION-BOOLEAN"`

	AttributeDefinitionDate []AttributeDefinitionDate `xml:"ATTRIBUTE-DEFINITION-DATE"`

	AttributeDefinitionEnumeration []AttributeDefinitionEnumeration `xml:"ATTRIBUTE-DEFINITION-ENUMERATION"`

	AttributeDefinitionInteger []AttributeDefinitionInteger `xml:"ATTRIBUTE-DEFINITION-INTEGER"`

	AttributeDefinitionReal []AttributeDefinitionReal `xml:"ATTRIBUTE-DEFINITION-REAL"`

	AttributeDefinitionString []AttributeDefinitionString `xml:"ATTRIBUTE-DEFINITION-STRING"`

	AttributeDefinitionXhtml []AttributeDefinitionXhtml `xml:"ATTRIBUTE-DEFINITION-XHTML"`
}

// XSD ComplexType declarations

type AlternativeId struct {
	XMLName xml.Name

	Identifier string `xml:"IDENTIFIER,attr"`
}

type AttributeDefinitionBoolean struct {
	XMLName xml.Name

	Desc string `xml:"DESC,attr,omitempty"`

	Identifier string `xml:"IDENTIFIER,attr"`

	IsEditable bool `xml:"IS-EDITABLE,attr,omitempty"`

	LastChange string `xml:"LAST-CHANGE,attr"`

	LongName string `xml:"LONG-NAME,attr,omitempty"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`

	DefaultValue *DefaultValue `xml:"DEFAULT-VALUE"`

	Type Type `xml:"TYPE"`
}

type AttributeDefinitionDate struct {
	XMLName xml.Name

	Desc string `xml:"DESC,attr,omitempty"`

	Identifier string `xml:"IDENTIFIER,attr"`

	IsEditable bool `xml:"IS-EDITABLE,attr,omitempty"`

	LastChange string `xml:"LAST-CHANGE,attr"`

	LongName string `xml:"LONG-NAME,attr,omitempty"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`

	DefaultValue *DefaultValue `xml:"DEFAULT-VALUE"`

	Type Type `xml:"TYPE"`
}

type AttributeDefinitionEnumeration struct {
	XMLName xml.Name

	Desc string `xml:"DESC,attr,omitempty"`

	Identifier string `xml:"IDENTIFIER,attr"`

	IsEditable bool `xml:"IS-EDITABLE,attr,omitempty"`

	LastChange string `xml:"LAST-CHANGE,attr"`

	LongName string `xml:"LONG-NAME,attr,omitempty"`

	MultiValued bool `xml:"MULTI-VALUED,attr"`

	DefaultValue *DefaultValue `xml:"DEFAULT-VALUE"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`

	Type Type `xml:"TYPE"`
}

type AttributeDefinitionInteger struct {
	XMLName xml.Name

	Desc string `xml:"DESC,attr,omitempty"`

	Identifier string `xml:"IDENTIFIER,attr"`

	IsEditable bool `xml:"IS-EDITABLE,attr,omitempty"`

	LastChange string `xml:"LAST-CHANGE,attr"`

	LongName string `xml:"LONG-NAME,attr,omitempty"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`

	DefaultValue *DefaultValue `xml:"DEFAULT-VALUE"`

	Type Type `xml:"TYPE"`
}

type AttributeDefinitionReal struct {
	XMLName xml.Name

	Desc string `xml:"DESC,attr,omitempty"`

	Identifier string `xml:"IDENTIFIER,attr"`

	IsEditable bool `xml:"IS-EDITABLE,attr,omitempty"`

	LastChange string `xml:"LAST-CHANGE,attr"`

	LongName string `xml:"LONG-NAME,attr,omitempty"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`

	DefaultValue *DefaultValue `xml:"DEFAULT-VALUE"`

	Type Type `xml:"TYPE"`
}

type AttributeDefinitionString struct {
	XMLName xml.Name

	Desc string `xml:"DESC,attr,omitempty"`

	Identifier string `xml:"IDENTIFIER,attr"`

	IsEditable bool `xml:"IS-EDITABLE,attr,omitempty"`

	LastChange string `xml:"LAST-CHANGE,attr"`

	LongName string `xml:"LONG-NAME,attr,omitempty"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`

	DefaultValue *DefaultValue `xml:"DEFAULT-VALUE"`

	Type Type `xml:"TYPE"`
}

type AttributeDefinitionXhtml struct {
	XMLName xml.Name

	Desc string `xml:"DESC,attr,omitempty"`

	Identifier string `xml:"IDENTIFIER,attr"`

	IsEditable bool `xml:"IS-EDITABLE,attr,omitempty"`

	LastChange string `xml:"LAST-CHANGE,attr"`

	LongName string `xml:"LONG-NAME,attr,omitempty"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`

	DefaultValue *DefaultValue `xml:"DEFAULT-VALUE"`

	Type Type `xml:"TYPE"`
}

type AttributeValueBoolean struct {
	XMLName xml.Name

	TheValue bool `xml:"THE-VALUE,attr"`

	Definition Definition `xml:",any"`
}

type AttributeValueDate struct {
	XMLName xml.Name

	TheValue string `xml:"THE-VALUE,attr"`

	Definition Definition `xml:",any"`
}

type AttributeValueEnumeration struct {
	XMLName xml.Name

	Definition Definition `xml:"DEFINITION"`

	Values *Values `xml:"VALUES"`
}

type AttributeValueInteger struct {
	XMLName xml.Name

	TheValue int64 `xml:"THE-VALUE,attr"`

	Definition Definition `xml:",any"`
}

type AttributeValueReal struct {
	XMLName xml.Name

	TheValue float64 `xml:"THE-VALUE,attr"`

	Definition Definition `xml:",any"`
}

type AttributeValueString struct {
	XMLName xml.Name

	TheValue string `xml:"THE-VALUE,attr"`

	Definition Definition `xml:",any"`
}

type AttributeValueXhtml struct {
	XMLName xml.Name

	IsSimplified bool `xml:"IS-SIMPLIFIED,attr,omitempty"`

	TheValue XhtmlContent `xml:"THE-VALUE"`

	TheOriginalValue *XhtmlContent `xml:"THE-ORIGINAL-VALUE"`

	Definition Definition `xml:"DEFINITION"`
}

type DatatypeDefinitionBoolean struct {
	XMLName xml.Name

	Desc string `xml:"DESC,attr,omitempty"`

	Identifier string `xml:"IDENTIFIER,attr"`

	LastChange string `xml:"LAST-CHANGE,attr"`

	LongName string `xml:"LONG-NAME,attr,omitempty"`

	AlternativeId *AlternativeId `xml:",any"`
}

type DatatypeDefinitionDate struct {
	XMLName xml.Name

	Desc string `xml:"DESC,attr,omitempty"`

	Identifier string `xml:"IDENTIFIER,attr"`

	LastChange string `xml:"LAST-CHANGE,attr"`

	LongName string `xml:"LONG-NAME,attr,omitempty"`

	AlternativeId *AlternativeId `xml:",any"`
}

type DatatypeDefinitionEnumeration struct {
	XMLName xml.Name

	Desc string `xml:"DESC,attr,omitempty"`

	Identifier string `xml:"IDENTIFIER,attr"`

	LastChange string `xml:"LAST-CHANGE,attr"`

	LongName string `xml:"LONG-NAME,attr,omitempty"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`

	SpecifiedValues *SpecifiedValues `xml:"SPECIFIED-VALUES"`
}

type DatatypeDefinitionInteger struct {
	XMLName xml.Name

	Desc string `xml:"DESC,attr,omitempty"`

	Identifier string `xml:"IDENTIFIER,attr"`

	LastChange string `xml:"LAST-CHANGE,attr"`

	LongName string `xml:"LONG-NAME,attr,omitempty"`

	Max int64 `xml:"MAX,attr"`

	Min int64 `xml:"MIN,attr"`

	AlternativeId *AlternativeId `xml:",any"`
}

type DatatypeDefinitionReal struct {
	XMLName xml.Name

	Accuracy int64 `xml:"ACCURACY,attr"`

	Desc string `xml:"DESC,attr,omitempty"`

	Identifier string `xml:"IDENTIFIER,attr"`

	LastChange string `xml:"LAST-CHANGE,attr"`

	LongName string `xml:"LONG-NAME,attr,omitempty"`

	Max float64 `xml:"MAX,attr"`

	Min float64 `xml:"MIN,attr"`

	AlternativeId *AlternativeId `xml:",any"`
}

type DatatypeDefinitionString struct {
	XMLName xml.Name

	Desc string `xml:"DESC,attr,omitempty"`

	Identifier string `xml:"IDENTIFIER,attr"`

	LastChange string `xml:"LAST-CHANGE,attr"`

	LongName string `xml:"LONG-NAME,attr,omitempty"`

	MaxLength int64 `xml:"MAX-LENGTH,attr"`

	AlternativeId *AlternativeId `xml:",any"`
}

type DatatypeDefinitionXhtml struct {
	XMLName xml.Name

	Desc string `xml:"DESC,attr,omitempty"`

	Identifier string `xml:"IDENTIFIER,attr"`

	LastChange string `xml:"LAST-CHANGE,attr"`

	LongName string `xml:"LONG-NAME,attr,omitempty"`

	AlternativeId *AlternativeId `xml:",any"`
}

type EmbeddedValue struct {
	XMLName xml.Name

	Key int64 `xml:"KEY,attr"`

	OtherContent string `xml:"OTHER-CONTENT,attr"`
}

type EnumValue struct {
	XMLName xml.Name

	Desc string `xml:"DESC,attr,omitempty"`

	Identifier string `xml:"IDENTIFIER,attr"`

	LastChange string `xml:"LAST-CHANGE,attr"`

	LongName string `xml:"LONG-NAME,attr,omitempty"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`

	Properties Properties `xml:"PROPERTIES"`
}

type RelationGroup struct {
	XMLName xml.Name

	Desc string `xml:"DESC,attr,omitempty"`

	Identifier string `xml:"IDENTIFIER,attr"`

	LastChange string `xml:"LAST-CHANGE,attr"`

	LongName string `xml:"LONG-NAME,attr,omitempty"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`

	SourceSpecification SourceSpecification `xml:"SOURCE-SPECIFICATION"`

	SpecRelations *SpecRelations `xml:"SPEC-RELATIONS"`

	TargetSpecification TargetSpecification `xml:"TARGET-SPECIFICATION"`

	Type Type `xml:"TYPE"`
}

type RelationGroupType struct {
	XMLName xml.Name

	Desc string `xml:"DESC,attr,omitempty"`

	Identifier string `xml:"IDENTIFIER,attr"`

	LastChange string `xml:"LAST-CHANGE,attr"`

	LongName string `xml:"LONG-NAME,attr,omitempty"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`

	SpecAttributes *SpecAttributes `xml:"SPEC-ATTRIBUTES"`
}

type ReqIfContent struct {
	XMLName xml.Name

	Datatypes *Datatypes `xml:"DATATYPES"`

	SpecTypes *SpecTypes `xml:"SPEC-TYPES"`

	SpecObjects *SpecObjects `xml:"SPEC-OBJECTS"`

	SpecRelations *SpecRelations `xml:"SPEC-RELATIONS"`

	Specifications *Specifications `xml:"SPECIFICATIONS"`

	SpecRelationGroups *SpecRelationGroups `xml:"SPEC-RELATION-GROUPS"`
}

type ReqIfHeader struct {
	XMLName xml.Name

	Identifier string `xml:"IDENTIFIER,attr"`

	Comment string `xml:"COMMENT"`

	CreationTime string `xml:"CREATION-TIME"`

	RepositoryId string `xml:"REPOSITORY-ID"`

	ReqIfToolId string `xml:"REQ-IF-TOOL-ID"`

	ReqIfVersion string `xml:"REQ-IF-VERSION"`

	SourceToolId string `xml:"SOURCE-TOOL-ID"`

	Title string `xml:"TITLE"`
}

type SpecHierarchy struct {
	XMLName xml.Name

	Desc string `xml:"DESC,attr,omitempty"`

	Identifier string `xml:"IDENTIFIER,attr"`

	IsEditable bool `xml:"IS-EDITABLE,attr,omitempty"`

	IsTableInternal bool `xml:"IS-TABLE-INTERNAL,attr,omitempty"`

	LastChange string `xml:"LAST-CHANGE,attr"`

	LongName string `xml:"LONG-NAME,attr,omitempty"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`

	Children *Children `xml:"CHILDREN"`

	EditableAtts *EditableAtts `xml:"EDITABLE-ATTS"`

	Object Object `xml:"OBJECT"`
}

type SpecObject struct {
	XMLName xml.Name

	Desc string `xml:"DESC,attr,omitempty"`

	Identifier string `xml:"IDENTIFIER,attr"`

	LastChange string `xml:"LAST-CHANGE,attr"`

	LongName string `xml:"LONG-NAME,attr,omitempty"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`

	Values *Values `xml:"VALUES"`

	Type Type `xml:"TYPE"`
}

type SpecObjectType struct {
	XMLName xml.Name

	Desc string `xml:"DESC,attr,omitempty"`

	Identifier string `xml:"IDENTIFIER,attr"`

	LastChange string `xml:"LAST-CHANGE,attr"`

	LongName string `xml:"LONG-NAME,attr,omitempty"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`

	SpecAttributes *SpecAttributes `xml:"SPEC-ATTRIBUTES"`
}

type SpecRelation struct {
	XMLName xml.Name

	Desc string `xml:"DESC,attr,omitempty"`

	Identifier string `xml:"IDENTIFIER,attr"`

	LastChange string `xml:"LAST-CHANGE,attr"`

	LongName string `xml:"LONG-NAME,attr,omitempty"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`

	Values *Values `xml:"VALUES"`

	Source Source `xml:"SOURCE"`

	Target Target `xml:"TARGET"`

	Type Type `xml:"TYPE"`
}

type SpecRelationType struct {
	XMLName xml.Name

	Desc string `xml:"DESC,attr,omitempty"`

	Identifier string `xml:"IDENTIFIER,attr"`

	LastChange string `xml:"LAST-CHANGE,attr"`

	LongName string `xml:"LONG-NAME,attr,omitempty"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`

	SpecAttributes *SpecAttributes `xml:"SPEC-ATTRIBUTES"`
}

type Specification struct {
	XMLName xml.Name

	Desc string `xml:"DESC,attr,omitempty"`

	Identifier string `xml:"IDENTIFIER,attr"`

	LastChange string `xml:"LAST-CHANGE,attr"`

	LongName string `xml:"LONG-NAME,attr,omitempty"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`

	Values *Values `xml:"VALUES"`

	Children *Children `xml:"CHILDREN"`

	Type Type `xml:"TYPE"`
}

type SpecificationType struct {
	XMLName xml.Name

	Desc string `xml:"DESC,attr,omitempty"`

	Identifier string `xml:"IDENTIFIER,attr"`

	LastChange string `xml:"LAST-CHANGE,attr"`

	LongName string `xml:"LONG-NAME,attr,omitempty"`

	AlternativeId *AlternativeId `xml:"ALTERNATIVE-ID"`

	SpecAttributes *SpecAttributes `xml:"SPEC-ATTRIBUTES"`
}

type ReqIfToolExtension struct {
	XMLName xml.Name
}

// XSD SimpleType declarations

type LocalRef string

type GlobalRef string

type XhtmlContent string
